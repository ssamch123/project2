jsp를 구성하는 요소 2가지로 나뉨 템플릿 데이터 jsp전용태그
탬플릿 데이터 -> 클라이언트로 출력되는 콘텐츠 
HTML,자바스크립트,스타일시트,JSON형식 문자열,XML,일반텍스트 
XML 장점: 작성하기가 간편 사람이 읽기가 쉬움.
DTD등 XML자체의 기능을 확장할 여지가 많이 있다.
단점: 문서의 양이 필요이상으로 많다.
배열 형식이나 반복구조의 경우 필요하지 않은 데이터가 계속해서 나타난다. 이로인해 파싱이 힘들어지고 속도가 느려진다.
jSON
장점:
내용이 함축적으로 최소한의 정보만을 가지고 있다.
XML대비 용량이 획기적으로 줄어들고 속도는 빨라진다.
객체구조 배열구조의 적절한 구분으로 효율적인 데이터 구성이 가능
파싱이 간편하고 일반적인 변수처럼 사용도 가능.
단점.
내용이 함축적이다 보니 내용의 의미 파악은 힘들수 있다.
템플릿 데이터 
템플릿 데이터는 클라이언트로 출력되는 콘텐츠 입니다. HTML이나 XML 자바스크립트,스타일시트 JSON문자열 ,일반텍스트 등을 말합니다. 템플릿 데이터는
서블릿코드를 생성할때 출력문으로 바뀝니다.
jSP (JAVA SERVER PAGES)는 JAVA언어를 기반으로 하는 스크립트 언어로 자바가 제공하는 기능을 그대로 사용가능 합니다.
HTTP와 같은 프로토콜에 따라 CLIENT요청 (REQUEST)을 처리하고 응답(RESPONSE)할수 있고 JSP는 서버에서 실행되므로 HTML소스에는 결과값만을 보여주고 웹 브라우저에서 소스보기를 하여도 결과값 외에
소스코드를 확인 할수 없으므로 보안에 유용하다는 장점을 갖습니다
JAVA는 JZSE(스텐다드 에디션) JZEE(엔터프라이즈 에디션)JZME(마이크로 에디션)으로 나눠져 개발되는데 JSP JZEE를 구성하는 기술중 하나입니다.

REQUEST : 웹 브라우저는 회선을 통해 웹서버로 페이지 요청을 합니다.
RESPONSE: 웹 서버가 웹브라우저로부터 받을 요청에 해당하는 페이지를 보내줍니다.

JSP의 특징
-객체지향적 -플랫폼독립적 -네트워크 지향적 뛰어난 보안성
웹 업플리케이션 구현방식
실행코드 방식
미리 컴파일된 실행프로그램은 사용자가 요청하면 실행되게 되며 CGI방시게서 사용 됩니다.
스크립트 코드방식.
사용자의 요청이 있을때, 스크립트 코드를 번역해 번역된 코드를 실행하게 되며, ASP, JSP의 같은 웹 업플리케이션 서버 방식에서 사용됩니다.
정적 페이지:사전에 제작되어 있어 어떤 처리도 않고 단순히 반환되는 데이터들로 사용자가 페이지를 가져와 브라우져상에 보기전부터 그페이지의 내용이 정해져 있습니다.
동적페이지:사용자가 페이지를 요청하는 시점부터 그페이지를 구성함을 하게 됩니다.

클라이언트
클라이언트 서버 구성에서 사용자측 사용자가 서버에 접속했을때 클라이언트는 사용자 본인을 지칭할수도 있고, 사용자의 컴퓨터를 가르키기도 하며, 컴퓨터에서 동작하고 있는 프로그램이 
될수도 있다.
컴퓨터 시스템의 프로세스는 또다른 컴퓨터 시스템의 프로세스를 요청할수 있다. 네트워크 에서는 네트워크 서버에 정보나 응용 프로그램은 요구할수 있는 pc등의 처리 기능이 있는
워크스테이션을 말하며 객체 연결및 포함(OLE)에서는 서버 응용 프로그램이라는 다른 응용프로그램이 데이터를 포함시키는 응용프로그램을 말한다. 
파일 서버로부터 파일의 내용을 요청하는 워크스테이션을 파일서버 클라이언트라 한다. 각각의 클라이언트 프로그램은 한개 또는 그이상의 서버 프로그램에 의하여 자동실행할수 있도록
디커인 되고, 또한 각각의 서버프로그램은 특별한 종류의 클라이언트 프로그램이 필요하다.



